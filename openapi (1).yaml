openapi: 3.0.1
info:
  title: Avalara Connector Webhook Receiver
  version: v1
paths:
  /assertion:
    get:
      tags:
        - Assertion
      summary: Get all assertion rules based on reference ID.
      description: Get all assertion rules based on reference ID.
      operationId: GetAllAssertionRules
      parameters:
        - name: referenceIDs
          in: query
          description: 'Assertion Rule reference IDs (default: null'
          schema:
            type: array
            items:
              type: string
        - name: pageNumber
          in: query
          description: 'Assertion Rules, page number (default: 0)'
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: 'Assertion Rules, page size (default: 100)'
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: Assertion Rule records page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionRuleEntityPagedResult'
    post:
      tags:
        - Assertion
      summary: Save Assertion Rule configuration.
      description: Upsert Assertion Rule configuration.
      operationId: SaveAssertionRule
      requestBody:
        description: Assertion Rule request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionRuleEntity'
        required: true
      responses:
        '202':
          description: Assertion Rule was saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionRuleEntity'
        '404':
          description: Assertion Rule not found.
          content:
            application/json:
              schema:
                type: string
  /assertion/{uid}:
    get:
      tags:
        - Assertion
      summary: Get Assertion rule by id.
      description: Get Assertion rule by id.
      parameters:
        - name: uid
          in: path
          description: Assertion rule id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Assertion rule configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionRuleEntity'
        '404':
          description: Assertion rule not found.
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - Assertion
      summary: Delete Assertion rule by id.
      description: Delete Assertion rule by id.
      parameters:
        - name: uid
          in: path
          description: Assertion rule id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Assertion rule configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionRuleEntity'
        '404':
          description: Assertion rule not found.
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Assertion rule cannot be deleted.
          content:
            application/json:
              schema:
                type: string
  /assertion/test:
    post:
      tags:
        - Assertion
      summary: Assert Rule expression
      description: Assert Rule expression
      operationId: AssertRuleExpression
      requestBody:
        description: Webhook registration configuration request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertRuleRequest'
            examples:
              Route assert rule request to test expression - endpoint (asynchronous flow):
                summary: 'Connector router configuration example: Test expression for HMAC Validation and fifoPartitioningExpression to extract the FIFO partitioning key.'
                value:
                  metadata:
                    expression: ToString(ToJson(GetBodyString())['eventNotifications'][0]['realmId'])
                  httpRequestProxy:
                    executionStartTime: '2022-12-21T03:38:52.8890142Z'
                    metadata: null
                    body: ewogICJldmVudE5vdGlmaWNhdGlvbnMiOiBbCiAgICB7CiAgICAgICJyZWFsbUlkIjogIjk5OTk5NTU1MDQzIgogICAgfQogIF0KfQ==
                    contentType: null
                    headers:
                      - key: Name
                        value: value
                    query: []
                    requestUri: null
                    method: null
                    queryString: null
                    host: null
        required: true
      responses:
        '200':
          description: Expression executed successfully .
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error while executing the expression.
          content:
            application/json:
              schema:
                type: string
  /assertions:
    post:
      tags:
        - Assertion
      summary: Save multiple Assertion Rule configuration.
      description: Upsert Assertion Rule configuration.
      operationId: SaveAssertionRules
      requestBody:
        description: Assertion Rule request
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssertionRuleEntity'
        required: true
      responses:
        '202':
          description: Assertion Rule was saved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssertionRuleEntity'
        '404':
          description: Assertion Rule not found.
          content:
            application/json:
              schema:
                type: string
  /maintenance:
    get:
      tags:
        - Maintenance
      summary: Get all webhook routing configurations.
      description: Get all webhook routing configurations.
      operationId: GetAll
      parameters:
        - name: pageNumber
          in: query
          description: 'Webhook routing configurations, page number (default: 0)'
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: 'Webhook routing configurations, page size (default: 100)'
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: Webhook registration configuration records page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRegistrationPagedResult'
    post:
      tags:
        - Maintenance
      summary: Save webhook routing configuration.
      description: Upsert webhook routing configuration.
      operationId: Save
      requestBody:
        description: Webhook registration configuration request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRegistration'
            examples:
              Route webhook request to a HTTP endpoint (synchronous flow):
                summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to an HTTP endpoint'
                value:
                  enabled: true
                  assertionRules: null
                  userIdentifierExpressions: null
                  target:
                    restApi:
                      enabled: true
                      url: https://example.targeturl.com
                      requestTimeoutMilliseconds: 30000
                    terminator: null
                  metadata: null
                  uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
              Route webhook request to a HTTP endpoint (synchronous flow), with a signature header HMAC validation:
                summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to a HTTP endpoint, with a signature header HMAC validation (example: QBO Event)'
                value:
                  enabled: true
                  assertionRules:
                    - 09b614d5-6c6e-41bf-b69d-abb35e305c2c
                  userIdentifierExpressions: null
                  target:
                    restApi:
                      enabled: true
                      url: https://example.targeturl.com
                      requestTimeoutMilliseconds: 30000
                    terminator: null
                  metadata: null
                  uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
              Route webhook request to a terminating endpoint (asynchronous flow):
                summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint'
                value:
                  enabled: true
                  assertionRules: null
                  userIdentifierExpressions: null
                  target:
                    restApi: null
                    terminator:
                      enabled: true
                      queueIdentifier: TargetSQSMessageQueue
                      terminatingHttpStatusCode: 202
                      fifo: null
                      dispatcher: null
                  metadata: null
                  uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
              Route webhook request to a terminating FIFO enabled - endpoint (asynchronous flow):
                summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a FIFO enabled terminating endpoint (queue), the configuration requires an expression to extract the FIFO partitioning key, example: QBO Event. '
                value:
                  enabled: true
                  assertionRules: null
                  userIdentifierExpressions:
                    - ToString(ToJson(GetBodyString())['eventNotifications'][0]['realmId'])
                  target:
                    restApi: null
                    terminator:
                      enabled: true
                      queueIdentifier: TargetSQSFIFOEnabledSQSMessageQueue
                      terminatingHttpStatusCode: 202
                      fifo:
                        enabled: true
                      dispatcher: null
                  metadata: null
                  uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
              Route webhook request to a terminating endpoint (asynchronous flow), after termination deliver to an HTTP endpoint:
                summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint. Enable consumer to consume from a terminating endpoint to a HTTP or queue endpoint'
                value:
                  enabled: true
                  assertionRules: null
                  userIdentifierExpressions: null
                  target:
                    restApi: null
                    terminator:
                      enabled: true
                      queueIdentifier: TargetSQSMessageQueue
                      terminatingHttpStatusCode: 202
                      fifo: null
                      dispatcher:
                        enabled: false
                        maxParallelRequests: 0
                        target:
                          restApi:
                            enabled: true
                            url: https://example.targeturl.com
                            requestTimeoutMilliseconds: 30000
                          terminator: null
                  metadata: null
                  uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
        required: true
      responses:
        '202':
          description: Webhook registration configuration was saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRegistration'
              examples:
                Route webhook request to a HTTP endpoint (synchronous flow):
                  summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to an HTTP endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi:
                        enabled: true
                        url: https://example.targeturl.com
                        requestTimeoutMilliseconds: 30000
                      terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a HTTP endpoint (synchronous flow), with a signature header HMAC validation:
                  summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to a HTTP endpoint, with a signature header HMAC validation (example: QBO Event)'
                  value:
                    enabled: true
                    assertionRules:
                      - 09b614d5-6c6e-41bf-b69d-abb35e305c2c
                    userIdentifierExpressions: null
                    target:
                      restApi:
                        enabled: true
                        url: https://example.targeturl.com
                        requestTimeoutMilliseconds: 30000
                      terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating endpoint (asynchronous flow):
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo: null
                        dispatcher: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating FIFO enabled - endpoint (asynchronous flow):
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a FIFO enabled terminating endpoint (queue), the configuration requires an expression to extract the FIFO partitioning key, example: QBO Event. '
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions:
                      - ToString(ToJson(GetBodyString())['eventNotifications'][0]['realmId'])
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSFIFOEnabledSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo:
                          enabled: true
                        dispatcher: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating endpoint (asynchronous flow), after termination deliver to an HTTP endpoint:
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint. Enable consumer to consume from a terminating endpoint to a HTTP or queue endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo: null
                        dispatcher:
                          enabled: false
                          maxParallelRequests: 0
                          target:
                            restApi:
                              enabled: true
                              url: https://example.targeturl.com
                              requestTimeoutMilliseconds: 30000
                            terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
        '404':
          description: Webhook registration configuration not found.
          content:
            application/json:
              schema:
                type: string
  /maintenance/{uid}:
    get:
      tags:
        - Maintenance
      summary: Get webhook routing configuration by id.
      description: Get webhook routing configuration by id.
      operationId: GetByUID
      parameters:
        - name: uid
          in: path
          description: Webhook registration configuration id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook registration configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRegistration'
              examples:
                Route webhook request to a HTTP endpoint (synchronous flow):
                  summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to an HTTP endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi:
                        enabled: true
                        url: https://example.targeturl.com
                        requestTimeoutMilliseconds: 30000
                      terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a HTTP endpoint (synchronous flow), with a signature header HMAC validation:
                  summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to a HTTP endpoint, with a signature header HMAC validation (example: QBO Event)'
                  value:
                    enabled: true
                    assertionRules:
                      - 09b614d5-6c6e-41bf-b69d-abb35e305c2c
                    userIdentifierExpressions: null
                    target:
                      restApi:
                        enabled: true
                        url: https://example.targeturl.com
                        requestTimeoutMilliseconds: 30000
                      terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating endpoint (asynchronous flow):
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo: null
                        dispatcher: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating FIFO enabled - endpoint (asynchronous flow):
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a FIFO enabled terminating endpoint (queue), the configuration requires an expression to extract the FIFO partitioning key, example: QBO Event. '
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions:
                      - ToString(ToJson(GetBodyString())['eventNotifications'][0]['realmId'])
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSFIFOEnabledSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo:
                          enabled: true
                        dispatcher: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating endpoint (asynchronous flow), after termination deliver to an HTTP endpoint:
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint. Enable consumer to consume from a terminating endpoint to a HTTP or queue endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo: null
                        dispatcher:
                          enabled: false
                          maxParallelRequests: 0
                          target:
                            restApi:
                              enabled: true
                              url: https://example.targeturl.com
                              requestTimeoutMilliseconds: 30000
                            terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
        '404':
          description: Webhook registration configuration not found.
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - Maintenance
      summary: Deletes webhook routing configuration.
      description: Deletes webhook routing configuration.
      operationId: Delete
      parameters:
        - name: uid
          in: path
          description: Webhook registration configuration uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted webhook registration configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRegistration'
              examples:
                Route webhook request to a HTTP endpoint (synchronous flow):
                  summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to an HTTP endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi:
                        enabled: true
                        url: https://example.targeturl.com
                        requestTimeoutMilliseconds: 30000
                      terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a HTTP endpoint (synchronous flow), with a signature header HMAC validation:
                  summary: 'Connector router configuration example: Routing an incoming webhook request synchronously to a HTTP endpoint, with a signature header HMAC validation (example: QBO Event)'
                  value:
                    enabled: true
                    assertionRules:
                      - 09b614d5-6c6e-41bf-b69d-abb35e305c2c
                    userIdentifierExpressions: null
                    target:
                      restApi:
                        enabled: true
                        url: https://example.targeturl.com
                        requestTimeoutMilliseconds: 30000
                      terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating endpoint (asynchronous flow):
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo: null
                        dispatcher: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating FIFO enabled - endpoint (asynchronous flow):
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a FIFO enabled terminating endpoint (queue), the configuration requires an expression to extract the FIFO partitioning key, example: QBO Event. '
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions:
                      - ToString(ToJson(GetBodyString())['eventNotifications'][0]['realmId'])
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSFIFOEnabledSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo:
                          enabled: true
                        dispatcher: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
                Route webhook request to a terminating endpoint (asynchronous flow), after termination deliver to an HTTP endpoint:
                  summary: 'Connector router configuration example: Routing asynchronously an incoming webhook request to a terminating endpoint. Enable consumer to consume from a terminating endpoint to a HTTP or queue endpoint'
                  value:
                    enabled: true
                    assertionRules: null
                    userIdentifierExpressions: null
                    target:
                      restApi: null
                      terminator:
                        enabled: true
                        queueIdentifier: TargetSQSMessageQueue
                        terminatingHttpStatusCode: 202
                        fifo: null
                        dispatcher:
                          enabled: false
                          maxParallelRequests: 0
                          target:
                            restApi:
                              enabled: true
                              url: https://example.targeturl.com
                              requestTimeoutMilliseconds: 30000
                            terminator: null
                    metadata: null
                    uid: 0d84d4d4-8cd9-49b0-b62c-725bc2378a8f
        '404':
          description: Webhook registration configuration not found.
          content:
            application/json:
              schema:
                type: string
  /receiver/{webhookReceiverRegistrationId}/{targetType}:
    post:
      tags:
        - Receiver
      summary: Marshal incoming request to target.
      description: Marshal incoming request to target.
      operationId: MarshalRequest
      parameters:
        - name: webhookReceiverRegistrationId
          in: path
          description: Webhook registration configuration id
          required: true
          schema:
            type: string
        - name: targetType
          in: path
          description: TargetType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /receiver/{webhookReceiverRegistrationId}/{targetType}/connection/{connectionId}:
    post:
      tags:
        - Receiver
      summary: Marshal incoming request to target.
      description: Marshal incoming request to target.
      operationId: MarshalRequestWithConnection
      parameters:
        - name: webhookReceiverRegistrationId
          in: path
          description: Webhook registration configuration id
          required: true
          schema:
            type: string
        - name: targetType
          in: path
          description: TargetType
          required: true
          schema:
            type: string
        - name: connectionId
          in: path
          description: ConnectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
components:
  schemas:
    AssertRuleExpression:
      type: object
      properties:
        expression:
          type: string
          nullable: true
      additionalProperties: false
    AssertRuleRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/AssertRuleExpression'
        httpRequestProxy:
          $ref: '#/components/schemas/HttpRequestProxy'
      additionalProperties: false
    AssertionRuleEntity:
      title: Assertion Rule Entity
      required:
        - description
        - enabled
        - name
        - referenceId
        - ruleDefinition
        - ruleType
        - targetType
      type: object
      properties:
        uid:
          type: string
          nullable: true
        enabled:
          type: boolean
          description: Assert rule is enabled
        referenceId:
          minLength: 1
          type: string
          description: Reference ID
        name:
          minLength: 1
          type: string
          description: Name
        description:
          minLength: 1
          type: string
          description: Assert rule expression description
        ruleType:
          $ref: '#/components/schemas/RuleType'
        ruleDefinition:
          minLength: 1
          type: string
          description: RuleDefinition
        targetType:
          $ref: '#/components/schemas/TargetType'
      additionalProperties: false
      description: Assertion Rule Entity
    AssertionRuleEntityPagedResult:
      type: object
      properties:
        nextPageIdentifier:
          type: string
          nullable: true
        isDone:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssertionRuleEntity'
          nullable: true
      additionalProperties: false
    HttpRequestProxy:
      type: object
      properties:
        executionStartTime:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        body:
          type: string
          nullable: true
        contentType:
          type: string
          nullable: true
          readOnly: true
        headers:
          type: array
          items:
            $ref: '#/components/schemas/HttpRequestProxyHeader'
          nullable: true
        query:
          type: array
          items:
            $ref: '#/components/schemas/HttpRequestProxyQuery'
          nullable: true
        requestUri:
          type: string
          nullable: true
        method:
          type: string
          nullable: true
        queryString:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
      additionalProperties: false
    HttpRequestProxyHeader:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    HttpRequestProxyQuery:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    HttpStatusCode:
      enum:
        - 100
        - 101
        - 102
        - 103
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 226
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 421
        - 422
        - 423
        - 424
        - 426
        - 428
        - 429
        - 431
        - 451
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        - 506
        - 507
        - 508
        - 510
        - 511
      type: integer
      format: int32
    RuleType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    TargetType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    WebhookRegistration:
      title: Webhook registration entity
      required:
        - enabled
      type: object
      properties:
        uid:
          type: string
          nullable: true
        enabled:
          type: boolean
          description: Webhook registration configuration enabled
        assertionRules:
          type: array
          items:
            type: string
          description: Used to define rules to filter incoming requests
          nullable: true
        userIdentifierExpressions:
          type: array
          items:
            type: string
          description: User Identifier Expressions
          nullable: true
        target:
          $ref: '#/components/schemas/WebhookRegistrationTarget'
        metadata:
          type: object
          additionalProperties:
            type: string
            nullable: true
          description: Webhook request route meta (connector) information
          nullable: true
      additionalProperties: false
      description: Webhook registration entity
    WebhookRegistrationFifoTerminatorTarget:
      type: object
      properties:
        enabled:
          type: boolean
          description: Terminating request target, FIFO support enabled setting.
      additionalProperties: false
      description: Terminating request target, FIFO support settings.
    WebhookRegistrationPagedResult:
      type: object
      properties:
        nextPageIdentifier:
          type: string
          nullable: true
        isDone:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookRegistration'
          nullable: true
      additionalProperties: false
    WebhookRegistrationRestApiTarget:
      required:
        - url
      type: object
      properties:
        enabled:
          type: boolean
          description: Request, REST API target endpoint, enabled setting
        url:
          minLength: 1
          type: string
          description: Request REST API target endpoint, url address
          format: uri
        requestTimeoutMilliseconds:
          type: integer
          description: Connector router to connector flow, request timeout in milliseconds
          format: int32
          nullable: true
      additionalProperties: false
      description: Request, REST API target endpoint, configuration
    WebhookRegistrationTarget:
      type: object
      properties:
        restApi:
          $ref: '#/components/schemas/WebhookRegistrationRestApiTarget'
        terminator:
          $ref: '#/components/schemas/WebhookRegistrationTerminatorTarget'
      additionalProperties: false
      description: Request route, target configurations
    WebhookRegistrationTerminatorDispatcher:
      type: object
      properties:
        enabled:
          type: boolean
          description: Terminating request target, dispatcher enabled setting.
        maxParallelRequests:
          type: integer
          description: Terminating request target, dispatcher maximum upstream parallel requests.
          format: int32
        target:
          $ref: '#/components/schemas/WebhookRegistrationTarget'
      additionalProperties: false
      description: Terminating request target, dispatcher settings.
    WebhookRegistrationTerminatorTarget:
      required:
        - queueIdentifier
      type: object
      properties:
        enabled:
          type: boolean
          description: Terminating request target, enabled setting.
        queueIdentifier:
          minLength: 1
          type: string
          description: Terminating request target, queue identifier.
        terminatingHttpStatusCode:
          $ref: '#/components/schemas/HttpStatusCode'
        fifo:
          $ref: '#/components/schemas/WebhookRegistrationFifoTerminatorTarget'
        dispatcher:
          $ref: '#/components/schemas/WebhookRegistrationTerminatorDispatcher'
      additionalProperties: false
      description: Terminating request target, endpoint configuration.
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://ai-awsfqa.avlr.sh/connect/authorize
          tokenUrl: https://ai-awsfqa.avlr.sh/connect/token
          scopes:
            openid: openid
            profile: profile
            avatax_api: avataxapi
            avatax: avatax
            email: email
            studio.connector: connector
            studio.connector.adapter: adapter
security:
  - oauth2: []
